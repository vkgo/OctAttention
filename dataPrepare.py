'''
Author: fuchy@stu.pku.edu.cn
Description: Prepare data for traning and testing.
             *.mat is generated by dataPrepare from *.ply
             *.mat data structure cell{N*4} :
                N: point clouds number; N=1 in '*.mat'
                    {
                        [TreePoints*K*C] Octree data sequence generated from PQ (Quantized point cloud): N*K*C [n,7,6] array
                                         N[n treepoints]  K[7 ancestors]   C[oct code,level,octant,position(xyz)]
                4:      {Location} Original geometric coordinate P (n*3)
                        {qs,offset,Lmax,name} side information; Quantized point cloud PQ = (P-offset)/qs; The depth of PQ; The name of P (point cloud)
                    }
All rights reserved.
'''
'''
Author: https://github.com/vkgo
Update 2023-4-18
Change the program to multi-process
Update 2023-4-19
Support to process multiple directories at the same time
'''
import glob
from Preparedata.data import dataPrepare
from networkTool import CPrintl
import multiprocessing as mp

def makedFile(dir):
    fileList = sorted(glob.glob(dir))
    return fileList

def prepare_data(file):
    try:
        fileName = file.split('/')[-1][:-4]
        dataName = outDir + ptNamePrefix + fileName + '.mat'
        if dataName in makeFileList:
            print(dataName, 'maked!')
            return
        dataPrepare(file, saveMatDir=outDir, ptNamePrefix=ptNamePrefix, offset=0, rotation=False)
        # please set `rotation=True` in the `dataPrepare` function when processing MVUB data
        printl(dataName)
    except Exception as e:
        print(f"Error occurred while processing file {file}: {e}")

if __name__ == "__main__":

    ######For MPEG,MVUB######
    oriDirs = ['./8iVFBv2/loot/Ply/*.ply', './8iVFBv2/redandblack/Ply/*.ply', './8iVLSF_910bit/boxer_viewdep_vox9.ply',
               './8iVLSF_910bit/boxer_viewdep_vox10.ply', './8iVLSF_910bit/Thaidancer_viewdep_vox9.ply',
               './8iVLSF_910bit/Thaidancer_viewdep_vox10.ply']  # Add more directories to this list
    outDir = './Data/Obj/test/'
    ptNamePrefix = 'MPEG_' # 'MVUB_'

    printl = CPrintl('Preparedata/makedFileObj.log')
    makeFileList = makedFile(outDir + '*.mat')

    fileList = []
    for oriDir in oriDirs:
        fileList += sorted(glob.glob(oriDir))

    # 使用多进程处理文件
    num_processes = mp.cpu_count()
    with mp.Pool(num_processes) as pool:
        pool.map(prepare_data, fileList)